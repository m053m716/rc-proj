function varargout = nnmf_analyses(varargin)
%NNMF_ANALYSES  Subset of defaults that dealing with file names
%
%  p = defaults.nnmf_analyses();
%  [var1,var2,...] = defaults.nnmf_analyses('var1Name','var2Name',...);
%
%  # Parameters (`name` values) #
%  -> 'color_order'
%  -> 'figure_params'
%  -> 'legend_params'
%  -> 'xlabel_params'
%  -> 'ylabel_params'

p = struct;
% p.color_order =      ... % Default Matlab axes color order
%    [0.0000    0.4470    0.7410;
%     0.8500    0.3250    0.0980;
%     0.9290    0.6940    0.1250;
%     0.4940    0.1840    0.5560;
%     0.4660    0.6740    0.1880;
%     0.3010    0.7450    0.9330;
%     0.6350    0.0780    0.1840];
utils.addHelperRepos();
figPosMat=ui__.getSecondMonitorPosition('Normalized',[0.1 0.2 0.35 0.4]);
figPosOv=ui__.getSecondMonitorPosition('Normalized',[0.5 0.1 0.3 0.8]);

p.fig_params_mat = {...
   'Name','NNMF Factor Correlations',...
   'NumberTitle','off',...
   'Color','w',...
   'Units','Normalized',...
   'Position',figPosMat,...
   };
cm = gfx__.cubehelix(256,[0.05 -1 0.9 0.8],[0.2 0.9],[0.1 0.5]);
p.ax_params = {...
   'YDir','Normal',...
   'NextPlot','add',...
   'Colormap',cm...
   };
p.color_order = cm(round(linspace(1,256,8)),:);
p.fig_params_overlay = {...
   'Name','NNMF Factors Overlay',...
   'NumberTitle','off',...
   'Color','w',...
   'Units','Normalized',...
   'Position',figPosOv ...
   };
p.legend_params = {...
   'boxoff',...
   'FontSize',12,...
   'FontName','Arial',...
   'Location','best'...
   };
p.title_params = {...
   'FontName','Arial',...
   'Color','k',...
   'FontSize',14,...
   'FontWeight','bold'...
   };
p.label_params = {...
   'FontName','Arial', ...
   'Color','k', ...
   'FontSize',13 ...
   };
p.n_subplot_row = 5;

p.corr_threshold = 0.95; % "Threshold" indicator line
p.rms_diff_threshold = 0.15; % "Threshold" for RMS difference
p.max_n_pks2label = 5;
p.factor_names = {'On_Event',...
   'Early_400ms','Late_300ms','Early_700ms',...
   'Excited_to_Suppressed','Suppressed_to_Excited'};
p.n_factors = numel(p.factor_names);
% Pairs of filter/value combos for recovering intial factors guess
p.slice_pairs_h0 = {...
   ...'Group','Intact',... % Not using this
   'Outcome','Successful',...
   'PelletPresent','Present',...
   'Alignment',{'Reach','Grasp'}};
p.opts = statset(...
   'Display','off',...
   'MaxIter',3e5,...
   'TolX',1e-8,...
   'TolFun',1e-8,...
   'UseParallel',false);
p.reps = 1;
p.alg = 'als'; % If switch to 'mult' change `reps` to >100

% Parse output
if nargin < 1
   varargout = {p};   
else
   F = fieldnames(p);   
   if (nargout == 1) && (numel(varargin) > 1)
      varargout{1} = struct;
      for iV = 1:numel(varargin)
         idx = strcmpi(F,varargin{iV});
         if sum(idx)==1
            varargout{1}.(F{idx}) = p.(F{idx});
         end
      end
   elseif nargout > 0
      varargout = cell(1,nargout);
      for iV = 1:nargout
         idx = strcmpi(F,varargin{iV});
         if sum(idx)==1
            varargout{iV} = p.(F{idx});
         end
      end
   else
      for iV = 1:nargin
         idx = strcmpi(F,varargin{iV});
         if sum(idx) == 1
            fprintf('<strong>%s</strong>:',F{idx});
            disp(p.(F{idx}));
         end
      end
   end
end

end
