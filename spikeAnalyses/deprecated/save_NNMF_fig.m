function fig = save_NNMF_fig(t,W,H,figTitle,outpath)
%% SAVE_NNMF_FIG  Helper function to export NNMF figures
%
%  fig = SAVE_NNMF_FIG(t,W,H,figTitle);
%  fig = SAVE_NNMF_FIG(t,W,H,figTitle,outpath);
%

%%
if nargin < 3
   error('Must provide 3 input arguments.');
end

if nargin < 4
   outpath = 'G:\Lab Member Folders\Max Murphy\Writing\_MANUSCRIPTS\2019-11-12_RC_Nat-Comms\Figures\NNMF';
end

%%
fig = figure('Name',figTitle,...
   'Units','Normalized',...
   'Position',[0.3 0.1 0.4 0.8],...
   'Color','w');
pTitle = uipanel(fig,'Units','Normalized',...
   'Position',[0.025 0.025 0.95 0.95],...
   'BackgroundColor','w',...
   'FontName','Arial',...
   'FontSize',18,...
   'BorderType','none',...
   'BorderWidth',0,...
   'ForegroundColor','k',...
   'TitlePosition','centertop',...
   'Title',sprintf('Non-negative Matrix Factorization: %s',figTitle(1:(end-5))));
pMat = uipanel(pTitle,'Units','Normalized',...
   'Position',[0.075 0.075 0.85 0.40],...
   'BackgroundColor','w',...
   'FontName','Arial',...
   'FontSize',14,...
   'ForegroundColor','k',...
   'Title','Channel Loadings');

f = figure('Name','temp','Visible','off');
[~,ax] = gplotmatrix(H.',H.',[],'k',[],[],'off','hist',...
   {'Factor-1','Factor-2','Factor-3'},...
   {'Factor-1','Factor-2','Factor-3'});
copyobj(ax,pMat);
delete(f);

pLoad = uipanel(pTitle,'Units','Normalized',...
   'Position',[0.075 0.525 0.85 0.40],...
   'BackgroundColor','w',...
   'FontName','Arial',...
   'FontSize',14,...
   'ForegroundColor','k',...
   'Title','Factor Loadings');
h = axes(pLoad,'Units','Normalized');
plot(h,t,W,'LineWidth',2);
legend(h,{'Factor-1';'Factor-2';'Factor-3'});
xlim(h,[min(t) max(t)]);
ylim(h,[0 1.5]);
xlabel(h,'Time (ms)','FontName','Arial',...
   'FontSize',14,'Color','k');
ylabel(h,'Factor Loadings','FontName','Arial',...
   'FontSize',14,'Color','k');


%% SAVE OUTPUT
if exist(outpath,'dir')==0
   mkdir(outpath);
end
fname = fullfile(outpath,figTitle);
expAI(fig,fname);
savefig(fig,[fname '.fig']);
saveas(fig,[fname '.png']);
if nargout < 1
   delete(fig);
end

end