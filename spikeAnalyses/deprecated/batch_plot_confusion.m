clearvars -except behaviorData rate data
close all force;
clc;

load('info.mat');

TANK = 'P:\Extracted_Data_To_Move\Rat\TDTRat';
ACTIVE_CH = [14,2,9,14,4,7,8,7,13,18,6,31,2];
ALIGN = {'Grasp';'Reach'};
COL = {'r';'b'};

for iA = 1:numel(ALIGN)
   for iF = 1:size(F,1)
      load(fullfile(TANK,F{iF,1},[F{iF,1} '_analyses'],...
         [F{iF,1} '_RateByDay_020ms_Align-' ALIGN{iA} '-All.mat']),'rate');

      for iDay = 1:numel(data)
         r = data{iDay};

         ratInfo = strsplit(r.info(1).file,'_');
         name = strjoin(ratInfo(1:4),'_');
         rat = ratInfo{1};

         load(fullfile(TANK,rat,name,...
            [name '_Digital'],[name '_Scoring.mat']),'behaviorData');

         [out,bData] = decompRateData(r,behaviorData,ACTIVE_CH(iF));

         %%
         if ~isempty(out{1})
%             for iCh = 1:numel(out)
%                str = sprintf('%s_%s-%s-%s_P%g-ch-%03g_%s-coeffs',...
%                      name,...
%                      r.info(iCh).ml,...
%                      r.info(iCh).area,...
%                      r.info(iCh).icms,...
%                      r.info(iCh).probe,...
%                      r.info(iCh).channel,...
%                      ALIGN{iA});
%                fig = figure(...
%                   'Name',str,...
%                   'Units','Normalized',...
%                   'Color','w',....
%                   'Position',...
%                      [0.2+(iCh/numel(out)*0.3),0.2+(iCh/numel(out)*0.3),0.4,0.4]);
%                ax = axes(fig); %#ok<LAXES>
%                for ii = 1:numel(COL)
%                   hold on;
%                   scatter3(ax,...
%                      out{iCh}.coeff(bData.Outcome==(ii-1),1),...
%                      out{iCh}.coeff(bData.Outcome==(ii-1),2),...
%                      out{iCh}.coeff(bData.Outcome==(ii-1),3),...
%                      15,'filled',...
%                      'MarkerFaceColor',COL{ii},...
%                      'MarkerEdgeColor','none');
%                   view(ax,30,30);
%                end
%                savefig(fig,fullfile(TANK,rat,[rat '_analyses'],[str '.fig']));
%                saveas(fig,fullfile(TANK,rat,[rat '_analyses'],[str '.png']));
%                delete(fig);
%                str = sprintf('%s_%s-%s-%s_P%g-ch-%03g_%s-confusion',...
%                      name,...
%                      r.info(iCh).ml,...
%                      r.info(iCh).area,...
%                      r.info(iCh).icms,...
%                      r.info(iCh).probe,...
%                      r.info(iCh).channel,...
%                      ALIGN{iA});
% 
%                fig = figure(...
%                   'Name',str,...
%                   'Units','Normalized',...
%                   'Color','w',....
%                   'Position',...
%                      [0.2+(iCh/numel(out)*0.3),0.2+(iCh/numel(out)*0.3),0.4,0.4]);
%                label = resubPredict(out{iCh}.Mdl);
%                plotconfusion(out{iCh}.Mdl.Y.',label.');
%                savefig(fig,fullfile(TANK,rat,[rat '_analyses'],[str '.fig']));
%                saveas(fig,fullfile(TANK,rat,[rat '_analyses'],[str '.png']));
%                delete(fig);
%             end
            TrueLabel = nan(size(bData,1),numel(out));
            PredictedLabel = nan(size(TrueLabel));
            
            for iCh = 1:numel(out)
               TrueLabel(:,iCh) = out{iCh}.Mdl.Y;
               PredictedLabel(:,iCh) = resubPredict(out{iCh}.Mdl);
            end
            bData = [bData,table(PredictedLabel,TrueLabel)]; %#ok<*AGROW>
            
            save(fullfile(TANK,rat,name,[name '_' ALIGN{iA} '-decompData.mat']),...
               'out','bData','-v7.3');
         end
      end
   end
end